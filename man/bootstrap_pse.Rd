% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pnspop.R
\name{bootstrap_pse}
\alias{bootstrap_pse}
\title{Estimate population size given privatized (hashed) neighbor identifiers with bootstrap confidence intervals}
\usage{
bootstrap_pse(
  subject,
  recruiter,
  subject_hash,
  degree,
  nbrs,
  rho = NULL,
  method = c("network", "alter", "sample"),
  small_sample_fraction = TRUE,
  n_bootstrap = 500,
  conf_level = 0.95,
  progress = TRUE
)
}
\arguments{
\item{subject}{The integer ids of each subject}

\item{recruiter}{The integer ids of the recruiter of each subject (-1 for seeds)}

\item{subject_hash}{The hashed identifier for the subject}

\item{degree}{The degree of each subject}

\item{nbrs}{A list, each element indicating the hashed identifier of the neighbors of each subject,
or a random subset of those neighbors.}

\item{rho}{The probability two random individuals have the same hash value.
If NULL this is estimated from the number of hash collisions in subject_hash.}

\item{method}{combined uses both the sample and the nominated alters for potential matches. "sample" uses only recruited individuals and "alter" uses only their nominated alters.}

\item{small_sample_fraction}{If TRUE, simplifies estimation by assuming a small sample fraction.}

\item{n_bootstrap}{The number of bootrap samples used to estimate the confidence intervals}

\item{conf_level}{The coverage level for the confidence intervals}

\item{progress}{Show a text progress bar}
}
\value{
A data frame with the population size values, CI lower and CI upper bounds.
}
\description{
Estimate population size given privatized (hashed) neighbor identifiers with bootstrap confidence intervals
}
\examples{
data(faux_pns)

#hashes
cross_tree_pse(faux_pns$subject,faux_pns$recruiter,
               faux_pns$subject_hash, faux_pns$degree,
               faux_pns[paste0("friend_hash",1:11)], rho=.001)

# Set n_bootstrap much higher in practice
bootstrap_pse(faux_pns$subject,faux_pns$recruiter,
               faux_pns$subject_hash, faux_pns$degree,
               faux_pns[paste0("friend_hash",1:11)], rho=.001, n_bootstrap=10)
}
